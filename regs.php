<?php
error_reporting(E_ALL);
header('Content-Type: text/html; charset=utf-8');

/**
 *	Задачник. После каждого $array мы ОБЯЗАНЫ написать прям тут нужный нам код. Прогнать массив $array через foreach и обработать по заданию из $q.
 *	$q - массивы, то есть могут содержать несколько заданий, каждый из которых будет работать с имеющимся массивом
 *	Если у нас в задаче замена, но мы производим замену и выводим: $text = preg_replace('что','на что',$text),
 *	Если у нас в задаче поиск, то производим проверку через if-else и выводим: строку
 *	echo 'В такой-то строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО или НЕ УСПЕШНО (подставить в if-else)';
 *	и если у нас поиск, то дополнительно вывести весь массив $matches, И нужную найденную строку, если нам надо её получить echo $matches[0][1] <- пример
 *  Задачки подготовил Inpost специально для курсов. Дата: 5 января 2012 года
 *	skype: imbalance_hero , пишите :)
 */

/**
 *	Подсказки:
 *	^ - начало строки, если указали, то проверка идёт от начала!
 *	$ - конец строки
 *	\s - пробел
 *	\t - табуляция
 *	* - {0,}
 *	+ - {1,}
 *	. - любой символ!
 *	Модификаторы:
 *	u - работаем в кодировке UTF-8
 *	i - регистронезависимый текст
 *	U - отмена жадного поиска
 *	Общие данные:
 *	[] - область допустимых символов в КОНКРЕТНОМ символе. [a-z]{3} <- 3 символа любых из a-z, вплоть даже до 3-х повторяющихся
 *	{} - количество символов, если не стоит, значит 1 символ! Если записано одно число, то РОВНОЕ значение, если 2, то min,max
 *	() - логические скобки И/ИЛИ карман, куда попадают данные
 */


$array = array(
	'Ваш логин: Inpost. Добро пожаловать',
	'Ваш логин: Николай. Добро пожаловать',
	'Ваш логин: Анна Семинович. Добро пожаловать',
	'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);

$q = 'Поиском достать логин. 
      Особенности: логин стоит после двухиточия, может представлять из себя рус и англ символы, пробелы, тире и подчеркивание. 
	  Для для того, чтобы достать чистый логин, воспользуемся карманом (скобками)';

echo '<hr>Задание 1. Поиском достать логин.<br>';

$login = array();
foreach ($array as $k =>$v) {
	preg_match('#\:\s(.+)\.#ui', $v, $matches);
	$login[] = $matches['1'];
}
echo 'Было: <pre>'.print_r($array,1).'</pre><br>';
echo 'Стало: <pre>'.print_r($login,1).'</pre><br>';



$array = array(
	'main',
	'READ',
	'news"&\\/files',
	'../../index',
	'news',
	'kill_crash-and-destroy',
	'loveYou',
);

$q = 'Проверить допустимые имена файлов
      Важно заметить, что мы в юникс-системе будем использовать как большие, так и маленькие символы.
	  Необходимо недопустить попадания ТОЛЬКО запрещенных файловой системой имён, а так же попытки перейти между каталогами';
echo '<hr>Задание 2. Проверить допустимые имена файлов.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k =>$v) {
	if (preg_match('#^([^\\\/\:\*\?\"\<\>\|\+\s\.\%\!\@]+)$#uiU', $v)) {
		echo $v.' - это допустимое имя файла<br>';
	} else {
		echo $v.' - это НЕ допустимое имя файла<br>';
	}
}


$array = array(
	'file.jpg',
	'zzz.png',
	'afafaf.php',
	'quad.jpg.',
	'quad2.JPG',
	'quad3.jpg.vir',
	'gif.doc',
	'file.virus',
);

$q = 'Загрузка фотографий. Необходимо допустить ТОЛЬКО: jpg,png,gif расширения
	  Важной особенностью будет то, что поиск лучше осуществлять с конца строки $ .
	  Интересный момент, что можно попасться на ошибку Попова :)';
echo '<hr>Задание 3. Загрузка фотографий. Необходимо допустить ТОЛЬКО: jpg,png,gif расширения.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
$img_true = array();
$img_false = array();

foreach ($array as $k =>$v) {
	if (preg_match('#(\.(jpe?g|png|gif))$#uiU', $v, $matches)) {
		$img_true[] = $v;
	} else {
		$img_false[] = $v;
	}
}
echo 'Допустимые форматы фотографий: <pre>'.print_r($img_true,1).'</pre><br>';
echo 'НЕ допустимые форматы фотографий: <pre>'.print_r($img_false,1).'</pre><br>';




$array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

$q = array(
	'Одна строка, заданий много:',
	'Получить все слова. Самая простая регулярка, поиск по всей строке, указать надо лишь допустимые символы и количество',
	'Получить все английские слова.',
	'Получить слова, которые стоят после точки. Обращаю внимание, что пробел после точки может БЫТЬ и даже не один, а может и не быть, символ пробела: \s',
	'Необходимо получить 5 символ от начала строки. Начало строки: ^ , и не забудем использовать кармашек, чтобы туда ушел нужный нам символ',
	'Получить все слова, в которых первым символ будет начинаться с большой буквы. Подсказка, необходимо использовать 2 квадратных скобки!',
);
echo '<hr>Дана строка: '.$array[0].'<br>';

echo '<hr>Задание 4. Получить все слова.<br>';
if (preg_match_all('#\w+#ui', $array[0], $matches)) {
	$i = 0;
	foreach ($matches[0] as $k => $v) {
		$worlds[] = $matches['0'][$i];
		++$i;
	}
}
echo 'Полученные слова:<br>';
echo '<pre>'.print_r($worlds,1).'</pre><br>';



echo '<hr>Задание 5. Получить все английские слова.<br>';
if (preg_match_all('#([a-z]+)#ui', $array[0], $matches)) {
	$i = 0;
	foreach ($matches[1] as $k => $v) {
		$english_worlds[] = $matches['1'][$i];
		++$i;
	}
}
echo 'Полученные слова:<br>';
echo '<pre>'.print_r($english_worlds,1).'</pre><br>';



echo '<hr>Задание 6. Получить слова, которые стоят после точки.<br>';
if (preg_match_all('#\.\s*(\w+)#ui', $array[0], $matches)) {
	$i = 0;
	foreach ($matches[1] as $k => $v) {
		$after_point[] = $matches['1'][$i];
		++$i;
	}
}
echo 'Полученные слова:<br>';
echo '<pre>'.print_r($after_point,1).'</pre><br>';

echo '<hr>Задание 7. Необходимо получить 5 символ от начала строки.<br>';
preg_match('#^.{4}(.)#ui', $array[0], $matches);
echo 'Полученный (пятый) сивол: '.$matches['1'];
echo '<pre>'.print_r($matches,1).'</pre><br>';


echo '<hr>Задание 8. Получить все слова, в которых первым символ будет начинаться с большой буквы.<br>';
if (preg_match_all('#([А-ЯA-Z]\w+)#i', $array[0], $matches)) {
	$i = 0;
	foreach ($matches[1] as $k => $v) {
		$big_letter[] = $matches[1][$i];
		++$i;
	}
}
echo 'Полученные слова:<br>';
echo '<pre>'.print_r($after_point,1).'</pre><br>';




$array = array(
	'1.1, 10 ,  2.2 , 22, 2.1, 2.5, 10.10, 500.1, 77, 10.11.12.13, 3.3',
);

$q = array(
	'Достать ВСЕ дробные числа. Дробные - это числа, разделенные точкой',
);
echo '<hr>Задание 9. Достать ВСЕ дробные числа.<br>';
echo 'Было: ';
echo '<pre>'.print_r($array,1).'</pre><br>';
if (preg_match_all('#(^|,|\s)(\d+\.\d+)(\s|,|$)#iu', $array[0], $matches)) {
	$i = 0;
	foreach ($matches[1] as $v) {
		$number[] = $matches[2][$i];
		++$i;
	}
}
echo 'Дробные числа:<br>';
echo '<pre>'.print_r($number,1).'</pre><br>';


$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);

$q = array(
	'Получить ссылки на реальные сайты (обязательно доменное имя), где имя сайта zimbabwe',
	'Немного сложная работа со строкой. Осуществить проверку каждого слова на присутствие в начале http://, и там, где его нет - дописать.
	 Для этих целей используем обход цикла foreach, и проверку preg_match. Не забываем про экранизацию при помощи preg_quote',
	'Похожее задание, но для сайтов, где не указано доменное имя - дописать .ru, это продолжение предыдущего задания, делается так же само, в одном цикле, просто 2 отдельных условия!',
);
echo '<hr>Задание 10. Получить ссылки на реальные сайты, где имя сайта zimbabwe.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match_all('#('.preg_quote("http://").').+#ui', $v, $matches)) {
		$array[$k] = $matches[0][0];
	} else {
		$array[$k] = 'http://'.$v;
	}
}
echo 'После обработки: <pre>'.print_r($array,1).'</pre><br>';

foreach ($array as $v) {
	if (preg_match('#(http://(www\.)*zimbabwe)((\.\w)+)+#uiU', $v)) {
		$link_true[] = $v;
	} else {
		$link_false[] = $v;
	}
}
echo 'Правильные ссылки: <pre>'.print_r($link_true,1).'</pre><br>';
echo 'НЕ правильные ссылки: <pre>'.print_r($link_false,1).'</pre><br>';

foreach ($array as $k => $v) {
	if (preg_match_all('#(www\.)*\w+(\.\w+)+#ui', $v, $matches)) {
		$array[$k] = $v;
	} else {
		$array[$k] = $v.'.ru';
	}
}
echo 'После обработки(с добавлением .ru): <pre>'.print_r($array,1).'</pre><br>';


$array = array(
	'inpost',
	'Barabulka_ru',
	'Zimbabwe.ru',
	'Max',
	'mAX',
	'Yojik',
	'Иван Тарасов',
	'Ёжик',
	'Борис Николаевич Кощуновский',
	'Ооооооооооооооооооооочень длинное имя',
	'Я',
	'go->drink->die',
	'Don`t sleep',
	'<Пивасик',
	'1',
	'123456789',
	'77777',
	'7ф777я7',
);

$q = array(
	'Теперь идут операции по работе с логинами и паролями. Очень важно именно при РЕГИСТРАЦИИ:',
	'Проверка на preg_match, разрешить только числам. Подсказка: числа точно так же как и буквы, а именно 0-9 (а-я)',
	'Пропустить только строки, состоящие из цифр 7 и символов ф,я',
	'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов',
	'Выбрать логин, который начинается на M и заканчивается на x , я говорю про Max',
);

echo '<hr>Задание 11. Pазрешить только числам.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match('#^\d+$#ui', $v)) {
		$number_all[] = $v;
	}
}
echo 'Только числа: <pre>'.print_r($number_all,1).'</pre><br>';

echo '<hr>Задание 12. Пропустить только строки, состоящие из цифр 7 и символов ф,я.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match('#^[7фя]+$#ui', $v)) {
		$number_f_ya[] = $v;
	}
}
echo 'Только цифра 7 и символы ф,я: <pre>'.print_r($number_f_ya,1).'</pre><br>';

echo '<hr>Задание 13. Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match('#^[\w\s]{4,15}$#ui', $v)) {
		$z13[] = $v;
	}
}
echo 'Только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов: <pre>'.print_r($z13,1).'</pre><br>';

echo '<hr>Задание 14. Выбрать логин, который начинается на M и заканчивается на x.<br>';
echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match('#^M.+x$#u', $v)) {
		$z14 = $v;
	}
}
echo 'Логин, который начинается на M и заканчивается на x: <b>'.$z14.'</b><br>';



$array = array(
	'Я тебя ооооочеень            СИЛЬНО            ЛЮБЛЮ          МОЙ                    ДругБорис! Цёми-Цёми,    Пративный!',
);

$q = array(
	'Вчера писал для себя. Заменить подряд идущие пробелы на один. Чтобы не было их так много. preg_replace',
);
echo '<hr>Задание 15. Заменить подряд идущие пробелы на один.<br>';
echo 'Дано: <pre>'.$array[0].'</pre><br>';
$z15 = preg_replace('#\s+#', ' ', $array[0]);
echo 'Получилась строка: <pre>'.$z15.'</pre><br>';

$array = array(
	'Дата публикации:27 августа 08:43. Был отличный год!',
);

$q = array(
	'Строку мы знаем, меняется лишь день,месяц,время. Необходимо достать:',
	'Время, когда опубликовали',
	'Полностью дату, а именно (27 августа 08:43), она может меняться!',
);
echo '<hr>Задание 16. Время, когда опубликовали.<br>';
echo 'Дано: <pre>'.$array[0].'</pre><br>';
preg_match('#([\d]{2}:[\d]{2})\.#', $array[0], $matches);
echo 'Время: '.$matches[1].'<br>';


echo '<hr>Задание 17. Полностью датa.<br>';
echo 'Дано: <pre>'.$array[0].'</pre><br>';
preg_match('#:(.+)\.#', $array[0], $matches);
echo 'Дата: '.$matches[1].'<br>';



$array = array(
	'<a href="file.php">Это ссылка, и тут было классно</a>',
	'<a    href     =       "file.php"     >Это ссылка, и тут было классно</a>',
	'<a    href=file.php >Это ссылка, и тут было классно</a>',
	"<a    href='file.php' >Это ссылка, и тут было классно</a>",
);

$q = array(
	'Используем карманы, необходимо получить путь, куда ссылается и текст внутри тега!
	 Стоит обратить внимание на момент, где символ МОЖЕТ БЫТЬ, а может и не БЫТЬ',
);
echo '<hr>Задание 18. Путь, куда ссылается и текст внутри тега.<br>';

echo 'Дано: <pre>'.htmlspecialchars(print_r($array,1)).'</pre><br>';
foreach ($array as $k => $v) {
	if (preg_match('#=[\s\'\"]*(\w+\.\w+)[^\>]*\>([^\<]+)\<#ui', $v, $matches)) {
		$z18[] = array(
			'Путь' => $matches[1],
			'Текст внутри тега' => $matches[2]
			);
	}
}
echo 'Получили: <pre>'.print_r($z18,1).'</pre><br>';



$array = array(
	'text@',
	'yandex@@mega.com',
	'beer@mail.com',
	"inpost.dp.ua",
	"inpostdpua@gmail.com",
);

$q = array(
	'Проверить на валидность е-мейла. Краткая информация (ВАЖНАЯ!), емеил состоит из набора символов маленьких. 
	 Присутствует в центре собака, слева имя ящика, которое может состоять из обычных символов англ И подчеркивания И тире.
	 Справа находятся домены, отделенные точками.',
);
echo '<hr>Задание 19. Проверить на валидность е-мейла.<br>';

echo 'Дано: <pre>'.print_r($array,1).'</pre><br>';
foreach ($array as $v) {
	if (preg_match('#^[a-z-_]+\@[a-z]+\.[a-z]+$#ui', $v)) {
		$email_true[] = $v;
	} else {
		$email_false[] = $v;
	}
}
echo 'Правильные e-mail: <pre>'.print_r($email_true,1).'</pre><br>';
echo 'НЕ правильные e-mail: <pre>'.print_r($email_false,1).'</pre><br>';
